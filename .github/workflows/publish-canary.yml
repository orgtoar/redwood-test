name: ü¶ú Publish Canary

on:
  push:
    branches: [main, next]
    # We don't want this to run when we publish a release.
    tags-ignore: ['v**']
    # No need to run on docs-only changes.
    paths-ignore: ['docs/**']

# Cancel in-progress runs of this workflow.
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-canary:
    if: github.repository == 'redwoodjs/redwood'

    name: ü¶ú Publish Canary
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get-version.outputs.value }}

    steps:
      - uses: actions/checkout@v3
        # `fetch-depth`‚Äînumber of commits to fetch. `0` fetches all history for all branches and tags.
        #  This is required because lerna uses tags to determine the version.
        with:
          fetch-depth: 0

      - name: ‚¨¢ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # We purposely don't do any yarn caching here.

      # `--inline-builds` is only for debugging. It tells Yarn to print the output of dependencies' build steps instead of writing them to files
      # See https://yarnpkg.com/cli/install#options-inline-builds.
      # We include the GitHub token to avoid rate limiting when installing `@vscode/ripgrep`.
      - name: üêà Yarn install
        run: yarn install --inline-builds
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: ‚úÖ Check constraints, dependencies, and package.json's
        uses: ./tasks/run-yarn-checks

      - name: üèó Build
        run: yarn build

      - name: üîé Lint
        run: yarn lint

      - name: üß™ Test
        run: yarn test

      - name: üö¢ Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc

          TAG='canary' && [[ "$GITHUB_REF_NAME" = 'next' ]] && TAG='next'
          echo "Publishing $TAG"

          args=()

          if [[ "$GITHUB_REF_NAME" = 'main' ]]; then
            args+=(premajor)
          fi

          args+=(
            --include-merged-tags
            --canary
            --exact
            --preid "$TAG"
            --dist-tag "$TAG"
            --force-publish
            --loglevel verbose
            --no-git-reset
            --yes
          )

          yarn lerna publish "${args[@]}"

        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: üè∑ Get version
        id: get-version
        uses: sergeysova/jq-action@v2.3.0
        with:
          cmd: 'jq .version packages/core/package.json -r'

  message-slack:
    needs: publish-canary
    if: ${{ !cancelled() }}

    name: üí¨ Message Slack
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: üí¨ Message Slack
        uses: ./.github/actions/message_slack_publishing
        with:
          title: "ü¶ú Canary Packages"
          status: ${{ needs.publish-canary.result }}
          version: ${{ needs.publish-canary.outputs.version }}
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL_PACKAGE_PUBLISHING }}
