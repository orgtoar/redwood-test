name: ‚öôÔ∏è CI

on:
  pull_request

# Cancel in-progress runs of this workflow.
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  smoke-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: true
    name: üëÄ Smoke test / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}
    env:
      REDWOOD_CI: 1
      REDWOOD_VERBOSE_TELEMETRY: 1
      # This makes sure that playwright dependencies are cached in node_modules.
      PLAYWRIGHT_BROWSERS_PATH: 0
    steps:
      - uses: actions/checkout@v3
      - name: üß∂ Set up job
        uses: ./.github/actions/set-up-job

      - run: echo "${{ hashFiles('__fixtures__/test-project') }}"
      - run: echo "${{ runner.temp }}"

      - name: Cache test project
        id: cache-test-project
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/test-project
          key: ${{ runner.os }}-${{ hashFiles('__fixtures__/test-project') }}-test-project

      - run: echo "${{ toJSON(steps) }}"
      - run: echo "${{ toJSON(steps.cache-test-project) }}"

      # if cache hit, don't set up...?
      # what gets cached tho?

      - name: üå≤ Setup test project
        id: setup_test_project
        uses: ./.github/actions/setup_test_project
        env:
          REDWOOD_DISABLE_TELEMETRY: 1
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: üé≠ Install playwright dependencies
        run: npx playwright install --with-deps chromium

      - name: Run `rw build` without prerender
        run: |
          yarn rw build --no-prerender
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw prerender`
        run: |
          yarn rw prerender --verbose
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run smoke tests on 'rw dev', 'rw serve', 'rw storybook'
        working-directory: ./tasks/smoke-test
        run: npx playwright test --project ${{ matrix.os == 'ubuntu-latest' && 'replay-chromium' || 'chromium' }} --reporter line
        env:
          PROJECT_PATH: ${{ steps.setup_test_project.outputs.test_project_path }}
          REDWOOD_DISABLE_TELEMETRY: 1
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: Smoke test / ${{ matrix.os }} / node 18 latest
          RECORD_REPLAY_TEST_METRICS: 1

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3

      - name: Run `rw info`
        run: |
          yarn rw info
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw lint`
        run: |
          yarn rw lint ./api/src --fix
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw test api"
        run: |
          yarn rw test api --no-watch
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw test web"
        run: |
          yarn rw test web --no-watch
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw check"
        run: |
          yarn rw check
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw storybook"
        run: |
          yarn rw sb --smoke-test
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw exec"
        run: |
          yarn rw g script testScript && yarn rw exec testScript
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "prisma generate"
        run: |
          yarn rw prisma generate
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw data-migrate"
        run: |
          yarn rw dataMigrate up
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "data-migrate install"
        run: |
          yarn rw data-migrate install
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "prisma migrate"
        run: |
          yarn rw prisma migrate dev --name ci-test
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw deploy --help`
        run: yarn rw setup deploy --help && yarn rw deploy --help
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw setup ui --help`
        run: yarn rw setup --help && yarn rw setup ui --help
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "g page"
        run: |
          yarn rw g page ciTest
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "g sdl"
        run: |
          yarn rw g sdl userExample
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw type-check"
        run: |
          yarn rw type-check
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Throw Error | Run `rw g sdl <model>`
        run: |
          yarn rw g sdl DoesNotExist
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}
        continue-on-error: true

      - name: Upload Replays
        if: always()
        uses: replayio/action-upload@v0.4.7
        with:
          api-key: rwk_cZn4WLe8106j6tC5ygNQxDpxAwCLpFo5oLQftiRN7OP
