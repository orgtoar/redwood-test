name: ‚öôÔ∏è CI

on:
  pull_request

jobs:
  only-doc-changes:
    name: üìñ Only doc changes?
    runs-on: ubuntu-latest
    outputs:
      only-doc-changes: ${{ steps.only-doc-changes.outputs.only-doc-changes }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: yarn install
        working-directory: ./.github/actions/only_doc_changes

      - name: üìñ Only doc changes?
        id: only-doc-changes
        uses: ./.github/actions/only_doc_changes

  check:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'false'
    name: ‚úÖ Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install
        working-directory: ./tasks/check

      - name: ‚úÖ Check constraints, dependencies, and package.json's
        uses: ./tasks/check

  build-lint-test:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
      fail-fast: true
    name: üèó Build, lint, test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Pass"

  tutorial-e2e:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14, 16]
      fail-fast: true
    name: üå≤ Tutorial E2E / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Pass"

  smoke-test:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
      fail-fast: true
    name: üëÄ Smoke test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    env:
      REDWOOD_CI: 1
      REDWOOD_VERBOSE_TELEMETRY: 1
      # This makes sure that playwright dependencies are cached in node_modules.
      PLAYWRIGHT_BROWSERS_PATH: 0
    steps:
      - run: echo "Pass"

  cherry-pick:
    needs: [build-lint-test, tutorial-e2e, smoke-test]
    if: github.event.pull_request.user.login == 'redwoodjs-bot[bot]' && github.base_ref == 'release' && !contains(join(needs.*.result, ','), 'failure')
    name: cherry-pick
    runs-on: ubuntu-latest

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          ref: release
          # git isn't able to work with the $GITHUB_SHA if we don't checkout everything.
          fetch-depth: 0
          # Since release is a protected branch, we need a token to run git push later.
          token: ${{ steps.generate_token.outputs.token }}

      - name: üçí Cherry pick
        run: |
          git cherry-pick ${{ github.event.pull_request.head.sha }}
          git push

      - name: Close PR
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh api graphql -F id=${{ github.event.pull_request.node_id }} -f query='
            mutation($id: ID!) {
              closePullRequest(input: {
                pullRequestId: $id
              }) {
                clientMutationId
              }
            }
          '
