name: ‚öôÔ∏è CI

on:
  pull_request

# Cancel in-progress runs of this workflow.
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  only-doc-changes:
    # if: github.repository == 'redwoodjs/redwood'

    name: üìñ Only doc changes?
    runs-on: ubuntu-latest

    outputs:
      only-doc-changes: ${{ steps.only-doc-changes.outputs.only-doc-changes }}

    steps:
      - uses: actions/checkout@v3

      - name: ‚¨¢ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üêà Yarn install
        run: yarn install --inline-builds
        working-directory: ./.github/actions/only-doc-changes

      - name: üìñ Only doc changes?
        id: only-doc-changes
        uses: ./.github/actions/only-doc-changes

  run-yarn-checks:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'false'

    name: ‚úÖ Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: ‚¨¢ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üêà Yarn install
        run: yarn install --inline-builds
        working-directory: ./tasks/run-yarn-checks

      - name: ‚úÖ Check constraints, dependencies, and package.json's
        uses: ./tasks/run-yarn-checks

  run-yarn-checks-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

    name: ‚úÖ Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest

    steps:
      - run: echo "Only doc changes"

  build-lint-test:
    needs: run-yarn-checks

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: üèó Build, lint, test / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Remove the tsc problem matcher if not ubuntu-latest
        if: matrix.os != 'ubuntu-latest'
        run: echo "echo "::remove-matcher owner=tsc::""

      - uses: actions/checkout@v3

      - name: üß∂ Set up Node.js and caching for yarn
        uses: ./.github/actions/set-up-job

      - name: üî® Build
        run: yarn build

      - name: üîé Lint
        run: yarn lint

      - name: Get number of CPU cores
        if: always()
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: üß™ Test
        run: yarn test-ci ${{ steps.cpu-cores.outputs.count }}

  build-lint-test-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: üèó Build, lint, test / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    steps:
      - run: echo "Only doc changes"

  tutorial-e2e:
    needs: run-yarn-checks

    strategy:
      matrix:
        os: [ubuntu-latest]

    name: üå≤ Tutorial E2E / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: üß∂ Set up Node.js and caching for yarn
        uses: ./.github/actions/set-up-job

      - name: üìÅ Create temporary directory
        id: create-temporary-directory
        run: |
          echo "project_path=$(mktemp -d -t redwood.XXXXXX)" >> $GITHUB_OUTPUT
          echo "framework_path=$(pwd)" >> $GITHUB_OUTPUT

      - name: üå≤ Create Redwood app
        run: ./tasks/run-e2e ${{ steps.create-temporary-directory.outputs.project_path }} --no-start
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: üêô Git init
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git init --initial-branch main && git add .
          git commit -a --message=init
        working-directory: ${{ steps.createpath.outputs.project_path }}

      - name: Start server
        run: yarn rw dev --no-generate --fwd="--no-open" &
        working-directory: ${{ steps.createpath.outputs.project_path }}

      - name: üå≤ Run cypress
        uses: cypress-io/github-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RW_PATH:  "${{ steps.createpath.outputs.project_path }}"
        with:
          # We've already installed dependencies.
          install: false
          env: true
          browser: chrome
          record: false
          wait-on: 'http://[::1]:8910'
          working-directory: ./tasks/e2e
          spec: |
             cypress/e2e/01-tutorial/*.cy.js
             cypress/e2e/04-logger/*.cy.js

  tutorial-e2e-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

    strategy:
      matrix:
        os: [ubuntu-latest]

    name: üå≤ Tutorial E2E / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    steps:
      - run: echo "Only doc changes"

  smoke-test:
    needs: run-yarn-checks

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false

    name: üîÑ Smoke tests / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    env:
      REDWOOD_CI: 1
      REDWOOD_VERBOSE_TELEMETRY: 1
      # This makes sure that playwright dependencies are cached in node_modules.
      PLAYWRIGHT_BROWSERS_PATH: 0

    steps:
      - uses: actions/checkout@v3

      - name: ‚¨¢ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # We try to cache and restore yarn's cache directory and install state to speed up the yarn install step.
      # Caching yarn's cache directory avoids its fetch step.
      #
      # See:
      # - https://gist.github.com/belgattitude/042f9caf10d029badbde6cf9d43e400a
      # - https://github.com/yarnpkg/berry/discussions/2621
      - name: üìÅ Get yarn cache directory
        id: get-yarn-cache-directory
        run: echo "CACHE_DIRECTORY=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        shell: bash

      # If the primary key doesn't match, the cache will probably be stale or incomplete, but still worth restoring.
      - name: ‚ôªÔ∏è Restore yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-yarn-cache-directory.outputs.CACHE_DIRECTORY }}
          key: yarn-cache-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-cache-${{ runner.os }}

      - name: ‚ôªÔ∏è Restore yarn install state
        uses: actions/cache@v3
        with:
          path: .yarn/install-state.gz
          key: yarn-install-state-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-install-state-${{ runner.os }}

      - name: ‚ôªÔ∏è Restore node_modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: yarn-node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-node-modules-${{ runner.os }}

      # `--inline-builds` is only for debugging. It tells Yarn to print the output of dependencies' build steps instead of writing them to files
      # See https://yarnpkg.com/cli/install#options-inline-builds.
      # We include the GitHub token to avoid rate limiting when installing `@vscode/ripgrep`.
      - name: üêà Yarn install
        run: yarn install --inline-builds
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: üî® Build
        run: yarn build

      - name: üìÅ Get test project directory
        id: get-test-project-directory
        run: echo "TEST_PROJECT_PATH=$(node -e "console.log(path.join(path.dirname(process.cwd()), 'test-project'))")" >> $GITHUB_OUTPUT
        shell: bash

      - name: ‚ôªÔ∏è Restore test project cache
        id: test-project-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
          key: test-project-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}-${{ hashFiles('packages') }}

      - name: üå≤ Set up test project
        if: steps.test-project-cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/set-up-test-project
        with:
          test-project-path: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
        env:
          REDWOOD_DISABLE_TELEMETRY: 1
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: üé≠ Install playwright dependencies
        run: npx playwright install --with-deps chromium

      - name: Run dev smoke tests
        working-directory: ./tasks/smoke-tests/dev
        run: npx playwright test --reporter html
        env:
          REDWOOD_PROJECT_PATH: '${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}'
          REDWOOD_DISABLE_TELEMETRY: 1

      - name: üîê Run auth smoke tests
        working-directory: ./tasks/smoke-tests/auth
        run: npx playwright test --reporter html
        env:
          REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
          REDWOOD_DISABLE_TELEMETRY: 1

      - name: ‚å®Ô∏è Run `rw build --no-prerender`
        run: |
          yarn rw build --no-prerender
        working-directory: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}

      - name: ‚å®Ô∏è Run `rw prerender`
        run: |
          yarn rw prerender --verbose
        working-directory: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}

      - name: üñ•Ô∏è Run serve smoke tests
        working-directory: tasks/smoke-tests/serve
        run: npx playwright test
        env:
          REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
          REDWOOD_DISABLE_TELEMETRY: 1

      - name: üìÑ Run prerender smoke tests
        working-directory: tasks/smoke-tests/prerender
        run: npx playwright test
        env:
          REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
          REDWOOD_DISABLE_TELEMETRY: 1

      - name: üìï Run Storybook smoke tests
        working-directory: tasks/smoke-tests/storybook
        run: npx playwright test
        env:
          REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
          REDWOOD_DISABLE_TELEMETRY: 1

      - name: ‚¨ÜÔ∏è Upload Playwright reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

  smoke-test-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: üîÑ Smoke tests / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    steps:
      - run: echo "Only doc changes"

  telemetry-check:
    needs: run-yarn-checks

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: üî≠ Telemetry check / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    env:
      REDWOOD_REDIRECT_TELEMETRY: "http://127.0.0.1:48619" # Random port

    steps:
      - uses: actions/checkout@v3

      - name: üß∂ Set up Node.js and caching for yarn
        uses: ./.github/actions/set-up-job

      - name: üî® Build
        run: yarn build

      - name: üì¢ Listen for telemetry (CRWA)
        run: node ./.github/actions/telemetry-check/telemetryCheck.mjs --mode crwa

      - name: üì¢ Listen for telemetry (CLI)
        run: node ./.github/actions/telemetry-check/telemetryCheck.mjs --mode cli
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

  telemetry-check-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: üî≠ Telemetry check / ${{ matrix.os }} / node 18 latest
    runs-on: ${{ matrix.os }}

    steps:
      - run: echo "Only doc changes"
