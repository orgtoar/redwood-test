name: ⚙️ CI

on:
  pull_request

jobs:
  check:
    name: ✅ Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🧶 Setup job
        uses: ./.github/actions/setup_job

      - name: ✅ Check constraints, dependencies, and package.json's
        uses: ./tasks/check

  build-lint-test:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
      fail-fast: false
    name: 🏗 Build, lint, test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Remove the tsc problem matcher if not ubuntu-latest, node 16
        if: (matrix.os == 'ubuntu-latest' && matrix.node-version == '16') == false
        run: echo "echo "::remove-matcher owner=tsc::""

      - uses: actions/checkout@v3
      - name: 🧶 Setup job
        uses: ./.github/actions/setup_job
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🔨 Build
        run: yarn build

      - name: 🔎 Lint
        run: yarn lint

        # 1

      - name: 🧪 CONTROL
        if: always()
        run: yarn test

      - name: 🧪 CONTROL
        if: always()
        run: yarn test

      - name: 🧪 CONTROL
        if: always()
        run: yarn test

        # 2

      - name: 🧪 runInBand
        if: always()
        run: yarn testRunInBand

      - name: 🧪 runInBand
        if: always()
        run: yarn testRunInBand

      - name: 🧪 runInBand
        if: always()
        run: yarn testRunInBand

        # 3

      - name: Get number of CPU cores
        if: always()
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: echo cores
        if: always()
        run: echo ${{ steps.cpu-cores.outputs.count }}

      - name: 🧪 cores
        if: always()
        run: yarn testWorkers ${{ steps.cpu-cores.outputs.count }}

      - name: 🧪 cores
        if: always()
        run: yarn testWorkers ${{ steps.cpu-cores.outputs.count }}

      - name: 🧪 cores
        if: always()
        run: yarn testWorkers ${{ steps.cpu-cores.outputs.count }}
