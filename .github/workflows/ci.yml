name: ‚öôÔ∏è CI

on:
  pull_request

# Cancel in-progress runs of this workflow.
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  # only-doc-changes:
  #   # if: github.repository == 'redwoodjs/redwood'

  #   name: üìñ Only doc changes?
  #   runs-on: ubuntu-latest

  #   outputs:
  #     only-doc-changes: ${{ steps.only-doc-changes.outputs.only-doc-changes }}

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: ‚¨¢ Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: üêà Yarn install
  #       run: yarn install
  #       working-directory: ./.github/actions/only-doc-changes

  #     - name: üìñ Only doc changes?
  #       id: only-doc-changes
  #       uses: ./.github/actions/only-doc-changes

  # run-yarn-checks:
  #   needs: only-doc-changes
  #   if: needs.only-doc-changes.outputs.only-doc-changes == 'false'

  #   name: ‚úÖ Check constraints, dependencies, and package.json's
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: ‚¨¢ Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: üêà Yarn install
  #       run: yarn install
  #       working-directory: ./tasks/run-yarn-checks

  #     - name: ‚úÖ Check constraints, dependencies, and package.json's
  #       uses: ./tasks/run-yarn-checks

  # run-yarn-checks-docs:
  #   needs: only-doc-changes
  #   if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

  #   name: ‚úÖ Check constraints, dependencies, and package.json's
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: echo "Only doc changes"

  # build-lint-test:
  #   needs: run-yarn-checks

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]

  #   name: üèó Build, lint, test / ${{ matrix.os }} / node 18 latest
  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - name: Remove the tsc problem matcher if not ubuntu-latest
  #       if: matrix.os != 'ubuntu-latest'
  #       run: echo "echo "::remove-matcher owner=tsc::""

  #     - uses: actions/checkout@v3

  #     - name: ‚¨¢ Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: üêà Set up yarn cache
  #       uses: ./.github/actions/set-up-yarn-cache

  #     - name: üêà Yarn install
  #       run: yarn install --inline-builds
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}

  #     - name: üî® Build
  #       run: yarn build

  #     - name: üîé Lint
  #       run: yarn lint

  #     - name: Get number of CPU cores
  #       id: cpu-cores
  #       uses: SimenB/github-actions-cpu-cores@v1

  #     - name: üß™ Test
  #       run: yarn test-ci ${{ steps.cpu-cores.outputs.count }}

  # build-lint-test-docs:
  #   needs: only-doc-changes
  #   if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]

  #   name: üèó Build, lint, test / ${{ matrix.os }} / node 18 latest
  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - run: echo "Only doc changes"

  tutorial-e2e:
    # needs: run-yarn-checks

    name: üå≤ Tutorial E2E / node 18 latest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: ‚¨¢ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üêà Set up yarn cache
        uses: ./.github/actions/set-up-yarn-cache

      - name: üêà Yarn install
        run: yarn install --inline-builds
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: üî® Build
        run: yarn build

      - name: üêô Set up git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: üìÅ Get tutorial e2e project directory
        id: get-tutorial-e2e-project-directory
        run: echo "TUTORIAL_E2E_PROJECT_DIRECTORY=$(node -e "console.log(path.join(path.dirname(process.cwd()), 'tutorial-e2e-project'))")" >> $GITHUB_OUTPUT
        shell: bash

      - name: üå≤ Set up tutorial e2e project
        if: steps.tutorial-e2e-project-cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/set-up-tutorial-e2e-project
        with:
          tutorial-e2e-project-path: ${{ steps.get-tutorial-e2e-project-directory.outputs.TUTORIAL_E2E_PROJECT_DIRECTORY }}
        env:
          REDWOOD_DISABLE_TELEMETRY: 1
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: üñ•Ô∏è Start server
        run: yarn rw dev --no-generate --fwd="--no-open" &
        working-directory: ${{ steps.get-tutorial-e2e-project-directory.outputs.TUTORIAL_E2E_PROJECT_DIRECTORY }}

      # We have to do this because of the combination of the way we cache node_modules
      # and where Cypress installs itself.
      - name: üå≤ Install Cypress
        run: yarn run cypress install

      - name: üå≤ Run Cypress
        uses: cypress-io/github-action@v5
        env:
          CYPRESS_RW_PATH: ${{ steps.get-tutorial-e2e-project-directory.outputs.TUTORIAL_E2E_PROJECT_DIRECTORY }}
        with:
          browser: chrome
          install: false
          working-directory: ./tasks/e2e
          spec: |
             cypress/e2e/01-tutorial/*.cy.js
             cypress/e2e/04-logger/*.cy.js
          wait-on: 'http://[::1]:8911/graphql?query={redwood{version}}'

  # tutorial-e2e-docs:
  #   needs: only-doc-changes
  #   if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

  #   name: üå≤ Tutorial E2E / node 18 latest
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: echo "Only doc changes"

  # smoke-test:
  #   # needs: run-yarn-checks

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #     fail-fast: false

  #   name: üîÑ Smoke tests / ${{ matrix.os }} / node 18 latest
  #   runs-on: ${{ matrix.os }}

  #   env:
  #     REDWOOD_CI: 1
  #     REDWOOD_VERBOSE_TELEMETRY: 1
  #     # This makes sure that playwright dependencies are cached in node_modules.
  #     PLAYWRIGHT_BROWSERS_PATH: 0

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: ‚¨¢ Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: üêà Set up yarn cache
  #       uses: ./.github/actions/set-up-yarn-cache

  #     - name: üêà Yarn install
  #       run: yarn install --inline-builds
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}

  #     - name: üî® Build
  #       run: yarn build

  #     - name: üìÅ Get test project directory
  #       id: get-test-project-directory
  #       run: echo "TEST_PROJECT_PATH=$(node -e "console.log(path.join(path.dirname(process.cwd()), 'test-project'))")" >> $GITHUB_OUTPUT
  #       shell: bash

  #     - name: üå≤ Set up test project
  #       uses: ./.github/actions/set-up-test-project
  #       with:
  #         test-project-path: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
  #       env:
  #         REDWOOD_DISABLE_TELEMETRY: 1
  #         YARN_ENABLE_IMMUTABLE_INSTALLS: false

  #     - name: üé≠ Install playwright dependencies
  #       run: npx playwright install --with-deps chromium

  #     - name: Run dev smoke tests
  #       working-directory: ./tasks/smoke-tests/dev
  #       run: npx playwright test
  #       env:
  #         REDWOOD_PROJECT_PATH: '${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}'
  #         REDWOOD_DISABLE_TELEMETRY: 1

  #     - name: üîê Run auth smoke tests
  #       working-directory: ./tasks/smoke-tests/auth
  #       run: npx playwright test
  #       env:
  #         REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
  #         REDWOOD_DISABLE_TELEMETRY: 1

  #     - name: ‚å®Ô∏è Run `rw build --no-prerender`
  #       run: |
  #         yarn rw build --no-prerender
  #       working-directory: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}

  #     - name: ‚å®Ô∏è Run `rw prerender`
  #       run: |
  #         yarn rw prerender --verbose
  #       working-directory: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}

  #     - name: üñ•Ô∏è Run serve smoke tests
  #       working-directory: tasks/smoke-tests/serve
  #       run: npx playwright test
  #       env:
  #         REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
  #         REDWOOD_DISABLE_TELEMETRY: 1

  #     - name: üìÑ Run prerender smoke tests
  #       working-directory: tasks/smoke-tests/prerender
  #       run: npx playwright test
  #       env:
  #         REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
  #         REDWOOD_DISABLE_TELEMETRY: 1

  #     - name: üìï Run Storybook smoke tests
  #       working-directory: tasks/smoke-tests/storybook
  #       run: npx playwright test
  #       env:
  #         REDWOOD_PROJECT_PATH: ${{ steps.get-test-project-directory.outputs.TEST_PROJECT_PATH }}
  #         REDWOOD_DISABLE_TELEMETRY: 1

  #     - name: ‚¨ÜÔ∏è Upload Playwright reports
  #       uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report
  #         retention-days: 7

  # smoke-test-docs:
  #   needs: only-doc-changes
  #   if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]

  #   name: üîÑ Smoke tests / ${{ matrix.os }} / node 18 latest
  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - run: echo "Only doc changes"

  # telemetry-check:
  #   needs: run-yarn-checks

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]

  #   name: üî≠ Telemetry check / ${{ matrix.os }} / node 18 latest
  #   runs-on: ${{ matrix.os }}

  #   env:
  #     REDWOOD_REDIRECT_TELEMETRY: "http://127.0.0.1:48619" # Random port

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: ‚¨¢ Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: üêà Set up yarn cache
  #       uses: ./.github/actions/set-up-yarn-cache

  #     - name: üêà Yarn install
  #       run: yarn install --inline-builds
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}

  #     - name: üî® Build
  #       run: yarn build

  #     - name: üì¢ Listen for telemetry (CRWA)
  #       run: node ./.github/actions/telemetry-check/telemetryCheck.mjs --mode crwa

  #     - name: üì¢ Listen for telemetry (CLI)
  #       run: node ./.github/actions/telemetry-check/telemetryCheck.mjs --mode cli
  #       env:
  #         YARN_ENABLE_IMMUTABLE_INSTALLS: false

  # telemetry-check-docs:
  #   needs: only-doc-changes
  #   if: needs.only-doc-changes.outputs.only-doc-changes == 'true'

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]

  #   name: üî≠ Telemetry check / ${{ matrix.os }} / node 18 latest
  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - run: echo "Only doc changes"
