name: ⚙️ CI

on:
  pull_request

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  only-doc-changes:
    # if: github.repository == 'redwoodjs/redwood'
    name: 📖 Only doc changes?
    runs-on: ubuntu-latest
    outputs:
      only-doc-changes: ${{ steps.only-doc-changes.outputs.only-doc-changes }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: yarn install
        working-directory: ./.github/actions/only_doc_changes

      - name: 📖 Only doc changes?
        id: only-doc-changes
        uses: ./.github/actions/only_doc_changes

  check:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'false'
    name: ✅ Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest
    steps:
      - run: echo "Pass"

  check-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'
    name: ✅ Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest
    steps:
      - run: echo "Only doc changes"

  build-lint-test:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
      fail-fast: true
    name: 🏗 Build, lint, test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Pass"

  build-lint-test-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
    name: 🏗 Build, lint, test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Only doc changes"

  tutorial-e2e:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14, 16]
      fail-fast: true
    name: 🌲 Tutorial E2E / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: 🧶 Setup job
        uses: ./.github/actions/setup_job
        with:
          node-version: ${{ matrix.node-version }}

      - name: 📁 Create a temporary directory
        id: createpath
        run: |
          project_path=$(mktemp -d -t redwood.XXXXXX)
          echo "::set-output name=project_path::$project_path"
          framework_path=$(pwd)
          echo "::set-output name=framework_path::$framework_path"

      - name: 🌲 Create a Redwood App
        run: ./tasks/run-e2e ${{ steps.createpath.outputs.project_path }} --no-start
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: 🐙 Git init in the Redwood App directory
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git init --initial-branch main && git add .
          git commit -a --message=init
        working-directory: ${{ steps.createpath.outputs.project_path }}

      - name: Start server in background
        run: yarn rw dev --no-generate --fwd="--no-open" &
        working-directory: ${{ steps.createpath.outputs.project_path }}

      - name: 🌲 Run cypress
        uses: cypress-io/github-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RW_PATH:  "${{ steps.createpath.outputs.project_path }}"
        with:
          # We've already installed dependencies.
          install: false
          env: true
          browser: chrome
          record: false
          wait-on: 'http://localhost:8910'
          working-directory: ./tasks/e2e
          spec: |
             cypress/e2e/01-tutorial/*.cy.js
             cypress/e2e/04-logger/*.cy.js

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3

  tutorial-e2e-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14, 16]
    name: 🌲 Tutorial E2E / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Only doc changes"

  smoke-test:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
      fail-fast: true
    name: 👀 Smoke test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    env:
      REDWOOD_CI: 1
      REDWOOD_VERBOSE_TELEMETRY: 1
      # This makes sure that playwright dependencies are cached in node_modules.
      PLAYWRIGHT_BROWSERS_PATH: 0
    steps:
      - run: echo "Pass"

  smoke-test-docs:
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
    name: 👀 Smoke test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "Only doc changes"

  cherry-pick:
    needs: [build-lint-test, tutorial-e2e, smoke-test]
    if: github.event.pull_request.user.login == 'redwoodjs-bot[bot]' && github.base_ref == 'next' && !contains(join(needs.*.result, ','), 'failure')
    name: cherry-pick
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: next
          fetch-depth: 0
          token: ${{ secrets.JTOAR_TOKEN }}

      - name: 🍒 Cherry pick
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git cherry-pick ${{ github.event.pull_request.head.sha }}
          git push

      - name: 🔑 Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Close PR
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh api graphql -F id=${{ github.event.pull_request.node_id }} -f query='
            mutation($id: ID!) {
              closePullRequest(input: {
                pullRequestId: $id
              }) {
                clientMutationId
              }
            }
          '

  cherry-pick-docs:
    needs: [build-lint-test-docs, tutorial-e2e-docs, smoke-test-docs]
    if: github.event.pull_request.user.login == 'redwoodjs-bot[bot]' && github.base_ref == 'next' && !contains(join(needs.*.result, ','), 'failure')
    name: cherry-pick-docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: next
          fetch-depth: 0
          token: ${{ secrets.JTOAR_TOKEN }}

      - name: 🍒 Cherry pick
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git cherry-pick ${{ github.event.pull_request.head.sha }}
          git push

      - name: 🔑 Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Close PR
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh api graphql -F id=${{ github.event.pull_request.node_id }} -f query='
            mutation($id: ID!) {
              closePullRequest(input: {
                pullRequestId: $id
              }) {
                clientMutationId
              }
            }
          '
