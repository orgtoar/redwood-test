# When a PR is merged into the main branch, this workflow tries to cherry pick the squashed commit into the release branch
# by fast forwarding the release branch via the `--ff` option.
# If that doesn't work (i.e. main and release have diverged), it'll open a PR against the branch release with the squashed commit.

name: üçí Cherry pick into release branch

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  cherry-pick-fast-forward:
    name: ‚è© Cherry pick fast forward
    runs-on: ubuntu-latest

    # Don't cherry pick commits with breaking changes.
    if: "!contains(github.event.pull_request.labels.*.name, 'release:feature-breaking')"

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          ref: release
          # git isn't able to work with $GITHUB_SHA if we don't checkout everything.
          fetch-depth: 0
          # Since release is a protected branch, we need a token to run `git push` later.
          token: ${{ steps.generate_token.outputs.token }}

      - name: ‚è© Cherry pick fast forward
        run: |
          git cherry-pick --ff $GITHUB_SHA

          # If the HEAD of main and release point to the same commit, then the fast forward worked.

          if [[ "$(git rev-parse origin/main)" = "$(git rev-parse release)" ]]; then
            git push
          else
            exit 1
          fi

  cherry-pick-into-release-pr:
    name:  Cherry pick PR
    runs-on: ubuntu-latest

    needs: cherry-pick-fast-forward
    if: ${{ failure() }}

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cherry pick into release PR
        uses: carloscastrojumo/github-cherry-pick-action@v1.0.2
        with:
          # We specify a token because we want other workflows (like CI) to run on this PR.
          # If we omit this, it uses the default token (GITHUB_TOKEN) which doesn't trigger other workflows.
          token: ${{ steps.generate_token.outputs.token }}
          branch: release
          labels: cherry-pick
