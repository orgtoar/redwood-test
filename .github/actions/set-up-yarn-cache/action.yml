name: Set up yarn cache
description: Set up yarn cache

runs:
  using: composite

  steps:
    # We try to cache and restore yarn's cache directory and install state to speed up the yarn install step.
    # Caching yarn's cache directory avoids its fetch step.
    - name: üìÅ Get yarn cache directory
      id: get-yarn-cache-directory
      run: echo "CACHE_DIRECTORY=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      shell: bash

    # If the primary key doesn't match, the cache will probably be stale or incomplete,
    # but still worth restoring for the yarn install step.
    - name: ‚ôªÔ∏è Restore yarn cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.get-yarn-cache-directory.outputs.CACHE_DIRECTORY }}
        key: yarn-cache-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
        restore-keys: yarn-cache-${{ runner.os }}

    # We avoid restore-keys for these steps because it's important to just start from scratch if something changes.
    # But most commits don't change `yarn.lock` or `.yarnrc.yml` ,so they'll be cached and restored most of the time.
    - name: ‚ôªÔ∏è Restore yarn install state
      uses: actions/cache@v3
      with:
        path: .yarn/install-state.gz
        key: yarn-install-state-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: ‚ôªÔ∏è Restore node_modules
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: yarn-node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
